client.on('group-participants-update', async (anu) => {
const mdata = await client.groupMetadata(anu.jid)
if(antifake.includes(anu.jid)) {
if (anu.action == 'add'){
num = anu.participants[0]
if(!num.split('@')[0].startsWith(55)) {
client.sendMessage(mdata.id, '🚫Neste Grupo e Proibido a Entrada De Números Fakes Ou Estrangeiros🚫Goodbye😕', MessageType.text)
setTimeout(async function () {
client.groupRemove(mdata.id, [num])
					}, 1000)
				}
			}
		}
if (!welkom.includes(anu.jid)) return




case 'antifake':

					try {

					if (!isGroup) return reply('So Em Grupos')

					if (!isGroupAdmins) return reply('Somente Admins Membro Comum')

					if (args.length < 1) return reply('Hmmmm')

					if (Number(args[0]) === 1) {

						if (isAntiFake) return reply('Ja esta ativo')

						antifake.push(from)

						fs.writeFileSync('./src/antifake.json', JSON.stringify(antifake))

						reply('Ativou com sucesso o recurso de antifake neste grupo✔️')

					} else if (Number(args[0]) === 0) {

						antifake.splice(from, 1)

						fs.writeFileSync('./src/antifake.json', JSON.stringify(antifake))

						reply('Desativou com sucesso o recurso de antifake neste grupo✔️')

					} else {

						reply('1 para ativar, 0 para desativar')

					}

					} catch {

						reply('Deu erro, tente novamente :/')

					}

                break
